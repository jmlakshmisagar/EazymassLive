"use client";

import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import Spinner from "./spinner";

// Separate the form submit handler type
type FormSubmitHandler = (e: React.FormEvent, email: string, password: string) => Promise<void>;

// Omit onSubmit from div props since we'll provide our own
interface LoginFormProps extends Omit<React.ComponentPropsWithoutRef<"div">, "onSubmit"> {
  isLoading: boolean;
  email: string;
  setEmail: (value: string) => void;
  password: string;
  setPassword: (value: string) => void;
  onSubmit: FormSubmitHandler;
  onGoogleLogin: () => void;
  onFacebookLogin: () => void;
  onGithubLogin: () => void;
  onMicrosoftLogin: () => void;
  loadingProvider: string | null;
}

export function LoginForm({
  className,
  isLoading,
  email,
  setEmail,
  password,
  setPassword,
  onSubmit,
  onGoogleLogin,
  onFacebookLogin,
  onGithubLogin,
  onMicrosoftLogin,
  loadingProvider,
  ...props
}: LoginFormProps) {
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit(e, email, password);
  };

  const isProviderLoading = (provider: string) => loadingProvider === provider;

  return (
    <div className={cn("grid gap-6", className)} {...props}>
      <form onSubmit={handleSubmit}>
        <div className="flex flex-col items-center gap-2 text-center">
          <h1 className="text-2xl font-bold">Eazy Get In</h1>
        </div>
        <div className="grid gap-6">
          <div className="grid gap-2">
            <Label htmlFor="email">Email</Label>
            <Input
              id="email"
              type="email"
              placeholder="name@example.com"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
              disabled={isLoading}
            />
          </div>
          <div className="grid gap-2">
            <div className="flex items-center">
              <Label htmlFor="password">Password</Label>
              <a
                href="#"
                className="ml-auto text-sm underline-offset-4 hover:underline text-muted-foreground"
              >
                Forgot your password?
              </a>
            </div>
            <Input
              id="password"
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
              disabled={isLoading}
            />
          </div>
          <Button 
            type="submit" 
            className="w-full"
            disabled={isLoading}
          >
            {isLoading ? (
              <div className="flex items-center justify-center">
                <Spinner size="small" className="mr-2" />
                <span>Logging in...</span>
              </div>
            ) : (
              "Get In"
            )}
          </Button>
          <div className="relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border">
            <span className="relative z-10 bg-background px-2 text-muted-foreground">
              Or continue with
            </span>
          </div>
          <div className="grid grid-cols-2 gap-4">
            <Button 
              type="button"
              variant="outline" 
              onClick={onGoogleLogin}
              disabled={loadingProvider !== null}
            >
              {isProviderLoading('google') ? (
                <div className="flex items-center">
                  <Spinner size="small" className="mr-2" />
                  <span>Logging in...</span>
                </div>
              ) : (
                <>
                  <svg className="mr-2 h-4 w-4" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
                      fill="black"
                    />
                    <path
                      d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
                      fill="black"
                    />
                    <path
                      d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
                      fill="black"
                    />
                    <path
                      d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
                      fill="black"
                    />
                  </svg>
                  Google
                </>
              )}
            </Button>

            <Button 
              type="button"
              variant="outline" 
              onClick={onMicrosoftLogin}
              disabled={loadingProvider !== null}
            >
              {isProviderLoading('microsoft') ? (
                <div className="flex items-center">
                  <Spinner size="small" className="mr-2" />
                  <span>Logging in...</span>
                </div>
              ) : (
                <>
                  <svg className="mr-2 h-4 w-4" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M11.4 2H2v9.4h9.4V2z" fill="black" />
                    <path d="M22 2h-9.4v9.4H22V2z" fill="black" />
                    <path d="M11.4 12.6H2V22h9.4v-9.4z" fill="black" />
                    <path d="M22 12.6h-9.4V22H22v-9.4z" fill="black" />
                  </svg>
                  Microsoft
                </>
              )}
            </Button>

            <Button 
              type="button"
              variant="outline" 
              onClick={onFacebookLogin}
              disabled={loadingProvider !== null}
            >
              {isProviderLoading('facebook') ? (
                <div className="flex items-center">
                  <Spinner size="small" className="mr-2" />
                  <span>Logging in...</span>
                </div>
              ) : (
                <>
                  <svg className="mr-2 h-4 w-4" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M22.675 0H1.325C.593 0 0 .593 0 1.325v21.351C0 23.407.593 24 1.325 24H12.82v-9.294H9.692v-3.622h3.128V8.413c0-3.1 1.893-4.788 4.658-4.788 1.325 0 2.464.099 2.795.143v3.24h-1.918c-1.504 0-1.796.715-1.796 1.763v2.31h3.59l-.467 3.622h-3.123V24h6.116C23.407 24 24 23.407 24 22.675V1.325C24 .593 23.407 0 22.675 0z" fill="black" />
                  </svg>
                  Facebook
                </>
              )}
            </Button>

            <Button 
              type="button"
              variant="outline" 
              onClick={onGithubLogin}
              disabled={loadingProvider !== null}
            >
              {isProviderLoading('github') ? (
                <div className="flex items-center">
                  <Spinner size="small" className="mr-2" />
                  <span>Logging in...</span>
                </div>
              ) : (
                <>
                  <svg className="mr-2 h-4 w-4" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 .297C5.373.297 0 5.67 0 12.297c0 5.302 3.438 9.8 8.207 11.387.6.11.793-.26.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.09-.744.083-.729.083-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.807 1.305 3.492.998.108-.775.418-1.305.762-1.605-2.665-.305-5.466-1.333-5.466-5.93 0-1.31.468-2.382 1.236-3.222-.123-.303-.535-1.526.117-3.176 0 0 1.008-.322 3.3 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.046.138 3.003.404 2.292-1.552 3.3-1.23 3.3-1.23.653 1.65.241 2.873.118 3.176.77.84 1.236 1.912 1.236 3.222 0 4.61-2.807 5.625-5.479 5.922.43.37.823 1.102.823 2.222v3.293c0 .32.192.694.8.577C20.565 22.092 24 17.594 24 12.297 24 5.67 18.627.297 12 .297z" fill="black" />
                  </svg>
                  GitHub
                </>
              )}
            </Button>
          </div>
        </div>
      </form>
    </div>
  );
}
